{"version":3,"sources":["IconPicker.js"],"names":["define","skylark","$","allIcons","_helpers","val","undefined","selector","length","String","arr","inArray","Iconpicker","element","options","this","_id","_idCounter","addClass","_trigger","iconpickerValue","extend","defaultOptions","data","templates","originalPlacement","placement","container","is","parent","isDropdownMenu","input","find","component","_createPopover","_createIconpicker","getAcceptButton","mustAccept","isInputGroup","append","popover","_bindElementEvents","_bindWindowEvents","update","selected","isInline","show","title","defaultValue","collision","animation","hideOnSelect","showFooter","searchInFooter","selectedCustomClass","icons","fullClassFormatter","inputSearch","footer","buttons","search","iconpicker","iconpickerItem","batch","method","args","Array","prototype","slice","call","arguments","each","$inst","apply","constructor","name","opts","trigger","type","iconpickerInstance","_title","hasSeparatedSearchInput","remove","_footer","_self","itemClickFn","e","$this","hide","$itemElementTemplate","$elementsToAppend","i","itemElement","clone","on","attr","searchTerms","j","push","_isEventInsideIconpicker","_t","target","hasClass","parents","getSearchInput","filter","toLowerCase","_picked","get","getCancelButton","stopPropagation","hasComponent","toggle","hasInput","keyCode","_updateFormGroupStatus","getValid","value","$doc","window","document","_eventNs","updatePlacement","_unbindElementEvents","off","hasContainer","_unbindWindowEvents","_pos","at","my","of","within","removeClass","pos","css","display","width","offset","left","top","right","bottom","maxWidth","_updateComponents","replace","icn","html","getHtml","isValid","isEmpty","trim","setValue","_val","setSourceValue","getSourceValue","isInputSearch","filterText","found","text","regex","RegExp","match","not","setTimeout","proxy","updateOnlyInternal","destroy","removeData","disable","prop","enable","isDisabled","fn","attach"],"mappings":"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","file":"../IconPicker.js","sourcesContent":["define([\n    \"skylark-langx/skylark\",\n    \"skylark-jquery\",\n    \"./allIcons\"\n],function(skylark,$,allIcons) {\n    'use strict';\n\n    var _helpers = {\n        isEmpty: function(val) {\n            return ((val === false) || (val === '') || (val === null) || (val === undefined));\n        },\n        isEmptyObject: function(val) {\n            return (this.isEmpty(val) === true) || (val.length === 0);\n        },\n        isElement: function(selector) {\n            return ($(selector).length > 0);\n        },\n        isString: function(val) {\n            return ((typeof val === 'string') || (val instanceof String));\n        },\n        isArray: function(val) {\n            return $.isArray(val);\n        },\n        inArray: function(val, arr) {\n            return ($.inArray(val, arr) !== -1);\n        },\n        throwError: function(text) {\n            throw \"Font Awesome Icon Picker Exception: \" + text;\n        }\n    };\n\n    var Iconpicker = function(element, options) {\n        this._id = Iconpicker._idCounter++;\n        this.element = $(element).addClass('iconpicker-element');\n        this._trigger('iconpickerCreate', {\n            iconpickerValue: this.iconpickerValue\n        });\n        this.options = $.extend({}, Iconpicker.defaultOptions, this.element.data(), options);\n        this.options.templates = $.extend({}, Iconpicker.defaultOptions.templates, this.options.templates);\n        this.options.originalPlacement = this.options.placement;\n        // Iconpicker container element\n        this.container = (_helpers.isElement(this.options.container) ? $(this.options.container) : false);\n        if (this.container === false) {\n            if (this.element.is('.dropdown-toggle')) {\n                this.container = $('~ .dropdown-menu:first', this.element);\n            } else {\n                this.container = (this.element.is('input,textarea,button,.btn') ? this.element.parent() : this.element);\n            }\n        }\n        this.container.addClass('iconpicker-container');\n\n        if (this.isDropdownMenu()) {\n            this.options.placement = 'inline';\n        }\n\n        // Is the element an input? Should we search inside for any input?\n        this.input = (this.element.is('input,textarea') ? this.element.addClass('iconpicker-input') : false);\n        if (this.input === false) {\n            this.input = (this.container.find(this.options.input));\n            if (!this.input.is('input,textarea')) {\n                this.input = false;\n            }\n        }\n\n        // Plugin as component ?\n        this.component = this.isDropdownMenu() ? this.container.parent().find(this.options.component) : this.container.find(this.options.component);\n        if (this.component.length === 0) {\n            this.component = false;\n        } else {\n            this.component.find('i').addClass('iconpicker-component');\n        }\n\n        // Create popover and iconpicker HTML\n        this._createPopover();\n        this._createIconpicker();\n\n        if (this.getAcceptButton().length === 0) {\n            // disable this because we don't have accept buttons\n            this.options.mustAccept = false;\n        }\n\n        // Avoid CSS issues with input-group-addon(s)\n        if (this.isInputGroup()) {\n            this.container.parent().append(this.popover);\n        } else {\n            this.container.append(this.popover);\n        }\n\n        // Bind events\n        this._bindElementEvents();\n        this._bindWindowEvents();\n\n        // Refresh everything\n        this.update(this.options.selected);\n\n        if (this.isInline()) {\n            this.show();\n        }\n\n        this._trigger('iconpickerCreated', {\n            iconpickerValue: this.iconpickerValue\n        });\n    };\n\n    // Instance identifier counter\n    Iconpicker._idCounter = 0;\n\n    Iconpicker.defaultOptions = {\n        title: false, // Popover title (optional) only if specified in the template\n        selected: false, // use this value as the current item and ignore the original\n        defaultValue: false, // use this value as the current item if input or element value is empty\n        placement: 'bottom', // (has some issues with auto and CSS). auto, top, bottom, left, right\n        collision: 'none', // If true, the popover will be repositioned to another position when collapses with the window borders\n        animation: true, // fade in/out on show/hide ?\n        //hide iconpicker automatically when a value is picked. it is ignored if mustAccept is not false and the accept button is visible\n        hideOnSelect: false,\n        showFooter: false,\n        searchInFooter: false, // If true, the search will be added to the footer instead of the title\n        mustAccept: false, // only applicable when there's an iconpicker-btn-accept button in the popover footer\n        selectedCustomClass: 'bg-primary', // Appends this class when to the selected item\n        icons: allIcons, // list of icon classes \n        fullClassFormatter: function(val) {\n            return val;\n        },\n        input: 'input,.iconpicker-input', // children input selector\n        inputSearch: false, // use the input as a search box too?\n        container: false, //  Appends the popover to a specific element. If not set, the selected element or element parent is used\n        component: '.input-group-addon,.iconpicker-component', // children component jQuery selector or object, relative to the container element\n        // Plugin templates:\n        templates: {\n            popover: '<div class=\"iconpicker-popover popover\"><div class=\"arrow\"></div>' +\n                '<div class=\"popover-title\"></div><div class=\"popover-content\"></div></div>',\n            footer: '<div class=\"popover-footer\"></div>',\n            buttons: '<button class=\"iconpicker-btn iconpicker-btn-cancel btn btn-default btn-sm\">Cancel</button>' +\n                ' <button class=\"iconpicker-btn iconpicker-btn-accept btn btn-primary btn-sm\">Accept</button>',\n            search: '<input type=\"search\" class=\"form-control iconpicker-search\" placeholder=\"Type to filter\" />',\n            iconpicker: '<div class=\"iconpicker\"><div class=\"iconpicker-items\"></div></div>',\n            iconpickerItem: '<a role=\"button\" href=\"javascript:;\" class=\"iconpicker-item\"><i></i></a>',\n        }\n    };\n\n    Iconpicker.batch = function(selector, method) {\n        var args = Array.prototype.slice.call(arguments, 2);\n        return $(selector).each(function() {\n            var $inst = $(this).data('iconpicker');\n            if (!!$inst) {\n                $inst[method].apply($inst, args);\n            }\n        });\n    };\n\n    Iconpicker.prototype = {\n        constructor: Iconpicker,\n        options: {},\n        _id: 0, // instance identifier for bind/unbind events\n        _trigger: function(name, opts) {\n            //triggers an event bound to the element\n            opts = opts || {};\n            this.element.trigger($.extend({\n                type: name,\n                iconpickerInstance: this\n            }, opts));\n            //console.log(name + ' triggered for instance #' + this._id);\n        },\n        _createPopover: function() {\n            this.popover = $(this.options.templates.popover);\n\n            // title (header)\n            var _title = this.popover.find('.popover-title');\n            if (!!this.options.title) {\n                _title.append($('<div class=\"popover-title-text\">' + this.options.title + '</div>'));\n            }\n            if (this.hasSeparatedSearchInput() && !this.options.searchInFooter) {\n                _title.append(this.options.templates.search);\n            } else if (!this.options.title) {\n                _title.remove();\n            }\n\n            // footer\n            if (this.options.showFooter && !_helpers.isEmpty(this.options.templates.footer)) {\n                var _footer = $(this.options.templates.footer);\n                if (this.hasSeparatedSearchInput() && this.options.searchInFooter) {\n                    _footer.append($(this.options.templates.search));\n                }\n                if (!_helpers.isEmpty(this.options.templates.buttons)) {\n                    _footer.append($(this.options.templates.buttons));\n                }\n                this.popover.append(_footer);\n            }\n\n            if (this.options.animation === true) {\n                this.popover.addClass('fade');\n            }\n\n            return this.popover;\n        },\n        _createIconpicker: function() {\n            var _self = this;\n            this.iconpicker = $(this.options.templates.iconpicker);\n\n            var itemClickFn = function(e) {\n                var $this = $(this);\n                if ($this.is('i')) {\n                    $this = $this.parent();\n                }\n\n                _self._trigger('iconpickerSelect', {\n                    iconpickerItem: $this,\n                    iconpickerValue: _self.iconpickerValue\n                });\n\n                if (_self.options.mustAccept === false) {\n                    _self.update($this.data('iconpickerValue'));\n                    _self._trigger('iconpickerSelected', {\n                        iconpickerItem: this,\n                        iconpickerValue: _self.iconpickerValue\n                    });\n                } else {\n                    _self.update($this.data('iconpickerValue'), true);\n                }\n\n                if (_self.options.hideOnSelect && (_self.options.mustAccept === false)) {\n                    // only hide when the accept button is not present\n                    _self.hide();\n                }\n            };\n\n            var $itemElementTemplate = $(this.options.templates.iconpickerItem);\n            var $elementsToAppend = [];\n            for (var i in this.options.icons) {\n                if (typeof this.options.icons[i].title === 'string') {\n                    var itemElement = $itemElementTemplate.clone();\n                    itemElement.find('i')\n                        .addClass(this.options.fullClassFormatter(this.options.icons[i].title));\n                    itemElement.data('iconpickerValue', this.options.icons[i].title)\n                        .on('click.iconpicker', itemClickFn);\n\n                    itemElement.attr('title', '.' + this.options.icons[i].title);\n                    if (this.options.icons[i].searchTerms.length > 0) {\n                        var searchTerms = '';\n                        for (var j = 0; j < this.options.icons[i].searchTerms.length; j++) {\n                            searchTerms = searchTerms + this.options.icons[i].searchTerms[j] + ' ';\n                        }\n                        itemElement.attr('data-search-terms', searchTerms);\n                    }\n                    $elementsToAppend.push(itemElement);\n                }\n            }\n            this.iconpicker.find('.iconpicker-items').append($elementsToAppend);\n            this.popover.find('.popover-content').append(this.iconpicker);\n\n            return this.iconpicker;\n        },\n        _isEventInsideIconpicker: function(e) {\n            var _t = $(e.target);\n            if ((!_t.hasClass('iconpicker-element') ||\n                    (_t.hasClass('iconpicker-element') && !_t.is(this.element))) &&\n                (_t.parents('.iconpicker-popover').length === 0)) {\n                return false;\n            }\n            return true;\n        },\n        _bindElementEvents: function() {\n            var _self = this;\n\n            this.getSearchInput().on('keyup.iconpicker', function() {\n                _self.filter($(this).val().toLowerCase());\n            });\n\n            this.getAcceptButton().on('click.iconpicker', function() {\n                var _picked = _self.iconpicker.find('.iconpicker-selected').get(0);\n\n                _self.update(_self.iconpickerValue);\n\n                _self._trigger('iconpickerSelected', {\n                    iconpickerItem: _picked,\n                    iconpickerValue: _self.iconpickerValue\n                });\n                if (!_self.isInline()) {\n                    _self.hide();\n                }\n            });\n            this.getCancelButton().on('click.iconpicker', function() {\n                if (!_self.isInline()) {\n                    _self.hide();\n                }\n            });\n\n            this.element.on('focus.iconpicker', function(e) {\n                _self.show();\n                e.stopPropagation();\n            });\n\n            if (this.hasComponent()) {\n                this.component.on('click.iconpicker', function() {\n                    _self.toggle();\n                });\n            }\n\n            if (this.hasInput()) {\n                // Bind input keyup event\n                this.input.on('keyup.iconpicker', function(e) {\n                    if (!_helpers.inArray(e.keyCode, [38, 40, 37, 39, 16, 17, 18, 9, 8, 91, 93, 20, 46, 186, 190, 46, 78, 188, 44, 86])) {\n                        _self.update();\n                    } else {\n                        _self._updateFormGroupStatus(_self.getValid(this.value) !== false);\n                    }\n                    if (_self.options.inputSearch === true) {\n                        _self.filter($(this).val().toLowerCase());\n                    }\n                    //_self.hide();\n                });\n            }\n\n        },\n        _bindWindowEvents: function() {\n            var $doc = $(window.document);\n            var _self = this;\n\n            // Add a namespace to the document events so they can be identified\n            // later for every instance separately\n            var _eventNs = '.iconpicker.inst' + this._id;\n\n            $(window).on('resize.iconpicker' + _eventNs + ' orientationchange.iconpicker' + _eventNs, function(e) {\n                // reposition popover\n                if (_self.popover.hasClass('in')) {\n                    _self.updatePlacement();\n                }\n            });\n\n            if (!_self.isInline()) {\n                $doc.on('mouseup' + _eventNs, function(e) {\n                    if (!_self._isEventInsideIconpicker(e) && !_self.isInline()) {\n                        _self.hide();\n                    }\n                });\n            }\n        },\n        _unbindElementEvents: function() {\n            this.popover.off('.iconpicker');\n            this.element.off('.iconpicker');\n\n            if (this.hasInput()) {\n                this.input.off('.iconpicker');\n            }\n\n            if (this.hasComponent()) {\n                this.component.off('.iconpicker');\n            }\n\n            if (this.hasContainer()) {\n                this.container.off('.iconpicker');\n            }\n        },\n        _unbindWindowEvents: function() {\n            // destroy window and window.document bound events\n            $(window).off('.iconpicker.inst' + this._id);\n            $(window.document).off('.iconpicker.inst' + this._id);\n        },\n        updatePlacement: function(placement, collision) {\n            placement = placement || this.options.placement;\n            this.options.placement = placement; // set new placement\n            collision = collision || this.options.collision;\n            collision = (collision === true ? 'flip' : collision);\n\n            var _pos = {\n                // at: Defines which position (or side) on container element to align the\n                // popover element against: \"horizontal vertical\" alignment.\n                at: \"right bottom\",\n                // my: Defines which position (or side) on the popover being positioned to align\n                // with the container element: \"horizontal vertical\" alignment\n                my: \"right top\",\n                // of: Which element to position against.\n                of: (this.hasInput() && !this.isInputGroup()) ? this.input : this.container,\n                // collision: When the positioned element overflows the window (or within element)\n                // in some direction, move it to an alternative position.\n                collision: (collision === true ? 'flip' : collision),\n                // within: Element to position within, affecting collision detection.\n                within: window\n            };\n\n            // remove previous classes\n            this.popover.removeClass('inline topLeftCorner topLeft top topRight topRightCorner ' +\n                'rightTop right rightBottom bottomRight bottomRightCorner ' +\n                'bottom bottomLeft bottomLeftCorner leftBottom left leftTop');\n\n            if (typeof placement === 'object') {\n                // custom position ?\n                return this.popover.pos($.extend({}, _pos, placement));\n            }\n\n            switch (placement) {\n                case 'inline':\n                    {\n                        _pos = false;\n                    }\n                    break;\n                case 'topLeftCorner':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'left top';\n                    }\n                    break;\n\n                case 'topLeft':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'left top';\n                    }\n                    break;\n\n                case 'top':\n                    {\n                        _pos.my = 'center bottom';\n                        _pos.at = 'center top';\n                    }\n                    break;\n\n                case 'topRight':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'right top';\n                    }\n                    break;\n\n                case 'topRightCorner':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'right top';\n                    }\n                    break;\n\n                case 'rightTop':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'right':\n                    {\n                        _pos.my = 'left center';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'rightBottom':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'bottomRightCorner':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'right bottom';\n                    }\n                    break;\n\n                case 'bottomRight':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'right bottom';\n                    }\n                    break;\n                case 'bottom':\n                    {\n                        _pos.my = 'center top';\n                        _pos.at = 'center bottom';\n                    }\n                    break;\n\n                case 'bottomLeft':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'left bottom';\n                    }\n                    break;\n\n                case 'bottomLeftCorner':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'left bottom';\n                    }\n                    break;\n\n                case 'leftBottom':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                case 'left':\n                    {\n                        _pos.my = 'right center';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                case 'leftTop':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                default:\n                    {\n                        return false;\n                    }\n                    break;\n\n            }\n\n            this.popover.css({\n                'display': (this.options.placement === 'inline') ? '' : 'block'\n            });\n\n            if (_pos !== false) {\n                this.popover.pos(_pos).css('maxWidth', $(window).width() - this.container.offset().left - 5);\n            } else {\n                //reset position\n                this.popover.css({\n                    'top': 'auto',\n                    'right': 'auto',\n                    'bottom': 'auto',\n                    'left': 'auto',\n                    'maxWidth': 'none'\n                });\n            }\n            this.popover.addClass(this.options.placement);\n\n            return true;\n        },\n        _updateComponents: function() {\n            // Update selected item\n            this.iconpicker.find('.iconpicker-item.iconpicker-selected')\n                .removeClass('iconpicker-selected ' + this.options.selectedCustomClass);\n\n            if (this.iconpickerValue) {\n                this.iconpicker.find('.' + this.options.fullClassFormatter(this.iconpickerValue).replace(/ /g, '.')).parent()\n                    .addClass('iconpicker-selected ' + this.options.selectedCustomClass);\n            }\n\n            // Update component item\n            if (this.hasComponent()) {\n                var icn = this.component.find('i');\n                if (icn.length > 0) {\n                    icn.attr('class', this.options.fullClassFormatter(this.iconpickerValue));\n                } else {\n                    this.component.html(this.getHtml());\n                }\n            }\n\n        },\n        _updateFormGroupStatus: function(isValid) {\n            if (this.hasInput()) {\n                if (isValid !== false) {\n                    // Remove form-group error class if any\n                    this.input.parents('.form-group:first').removeClass('has-error');\n                } else {\n                    this.input.parents('.form-group:first').addClass('has-error');\n                }\n                return true;\n            }\n            return false;\n        },\n        getValid: function(val) {\n            // here we must validate the value (you may change this validation\n            // to suit your needs\n            if (!_helpers.isString(val)) {\n                val = '';\n            }\n\n            var isEmpty = (val === '');\n\n            // trim string\n            val = $.trim(val);\n            var e = false;\n            for (var i = 0; i < this.options.icons.length; i++) {\n                if (this.options.icons[i].title === val) {\n                    e = true;\n                    break;\n                };\n            }\n\n            if (e || isEmpty) {\n                return val;\n            }\n            return false;\n        },\n        /**\n         * Sets the internal item value and updates everything, excepting the input or element.\n         * For doing so, call setSourceValue() or update() instead\n         */\n        setValue: function(val) {\n            // sanitize first\n            var _val = this.getValid(val);\n            if (_val !== false) {\n                this.iconpickerValue = _val;\n                this._trigger('iconpickerSetValue', {\n                    iconpickerValue: _val\n                });\n                return this.iconpickerValue;\n            } else {\n                this._trigger('iconpickerInvalid', {\n                    iconpickerValue: val\n                });\n                return false;\n            }\n        },\n        getHtml: function() {\n            return '<i class=\"' + this.options.fullClassFormatter(this.iconpickerValue) + '\"></i>';\n        },\n        /**\n         * Calls setValue and if it's a valid item value, sets the input or element value\n         */\n        setSourceValue: function(val) {\n            val = this.setValue(val);\n            if ((val !== false) && (val !== '')) {\n                if (this.hasInput()) {\n                    this.input.val(this.iconpickerValue);\n                } else {\n                    this.element.data('iconpickerValue', this.iconpickerValue);\n                }\n                this._trigger('iconpickerSetSourceValue', {\n                    iconpickerValue: val\n                });\n            }\n            return val;\n        },\n        /**\n         * Returns the input or element item value, without formatting, or defaultValue\n         * if it's empty string, undefined, false or null\n         * @param {type} defaultValue\n         * @returns string|mixed\n         */\n        getSourceValue: function(defaultValue) {\n            // returns the input or element value, as string\n            defaultValue = defaultValue || this.options.defaultValue;\n            var val = defaultValue;\n\n            if (this.hasInput()) {\n                val = this.input.val();\n            } else {\n                val = this.element.data('iconpickerValue');\n            }\n            if ((val === undefined) || (val === '') || (val === null) || (val === false)) {\n                // if not defined or empty, return default\n                val = defaultValue;\n            }\n            return val;\n        },\n        hasInput: function() {\n            return (this.input !== false);\n        },\n        isInputSearch: function() {\n            return (this.hasInput() && (this.options.inputSearch === true));\n        },\n        isInputGroup: function() {\n            return this.container.is('.input-group');\n        },\n        isDropdownMenu: function() {\n            return this.container.is('.dropdown-menu');\n        },\n        hasSeparatedSearchInput: function() {\n            return (this.options.templates.search !== false) && (!this.isInputSearch());\n        },\n        hasComponent: function() {\n            return (this.component !== false);\n        },\n        hasContainer: function() {\n            return (this.container !== false);\n        },\n        getAcceptButton: function() {\n            return this.popover.find('.iconpicker-btn-accept');\n        },\n        getCancelButton: function() {\n            return this.popover.find('.iconpicker-btn-cancel');\n        },\n        getSearchInput: function() {\n            return this.popover.find('.iconpicker-search');\n        },\n        filter: function(filterText) {\n            if (_helpers.isEmpty(filterText)) {\n                this.iconpicker.find('.iconpicker-item').show();\n                return $(false);\n            } else {\n                var found = [];\n                this.iconpicker.find('.iconpicker-item').each(function() {\n                    var $this = $(this);\n                    var text = $this.attr('title').toLowerCase();\n                    var searchTerms = $this.attr('data-search-terms') ? $this.attr('data-search-terms').toLowerCase() : '';\n                    text = text + ' ' + searchTerms;\n                    var regex = false;\n                    try {\n                        regex = new RegExp('(^|\\\\W)' + filterText, 'g');\n                    } catch (e) {\n                        regex = false;\n                    }\n                    if ((regex !== false) && text.match(regex)) {\n                        found.push($this);\n                        $this.show();\n                    } else {\n                        $this.hide();\n                    }\n                });\n                return found;\n            }\n        },\n        show: function() {\n            if (this.popover.hasClass('in')) {\n                return false;\n            }\n            // hide other non-inline pickers\n            $.iconpicker.batch($('.iconpicker-popover.in:not(.inline)').not(this.popover), 'hide');\n\n            this._trigger('iconpickerShow', {\n                iconpickerValue: this.iconpickerValue\n            });\n            this.updatePlacement();\n            this.popover.addClass('in');\n            setTimeout($.proxy(function() {\n                this.popover.css('display', this.isInline() ? '' : 'block');\n                this._trigger('iconpickerShown', {\n                    iconpickerValue: this.iconpickerValue\n                });\n            }, this), this.options.animation ? 300 : 1); // animation duration\n        },\n        hide: function() {\n            if (!this.popover.hasClass('in')) {\n                return false;\n            }\n            this._trigger('iconpickerHide', {\n                iconpickerValue: this.iconpickerValue\n            });\n            this.popover.removeClass('in');\n            setTimeout($.proxy(function() {\n                this.popover.css('display', 'none');\n                this.getSearchInput().val('');\n                this.filter(''); // clear filter\n                this._trigger('iconpickerHidden', {\n                    iconpickerValue: this.iconpickerValue\n                });\n            }, this), this.options.animation ? 300 : 1);\n        },\n        toggle: function() {\n            if (this.popover.is(\":visible\")) {\n                this.hide();\n            } else {\n                this.show(true);\n            }\n        },\n        update: function(val, updateOnlyInternal) {\n            val = (val ? val : this.getSourceValue(this.iconpickerValue));\n            // reads the input or element value again and tries to update the plugin\n            // fallback to the current selected item value\n            this._trigger('iconpickerUpdate', {\n                iconpickerValue: this.iconpickerValue\n            });\n\n            if (updateOnlyInternal === true) {\n                val = this.setValue(val);\n            } else {\n                val = this.setSourceValue(val);\n                this._updateFormGroupStatus(val !== false);\n            }\n\n            if (val !== false) {\n                this._updateComponents();\n            }\n\n            this._trigger('iconpickerUpdated', {\n                iconpickerValue: this.iconpickerValue\n            });\n            return val;\n        },\n        destroy: function() {\n            this._trigger('iconpickerDestroy', {\n                iconpickerValue: this.iconpickerValue\n            });\n\n            // unbinds events and resets everything to the initial state,\n            // including component mode\n            this.element.removeData('iconpicker').removeData('iconpickerValue').removeClass('iconpicker-element');\n\n            this._unbindElementEvents();\n            this._unbindWindowEvents();\n\n            $(this.popover).remove();\n\n            this._trigger('iconpickerDestroyed', {\n                iconpickerValue: this.iconpickerValue\n            });\n        },\n        disable: function() {\n            if (this.hasInput()) {\n                this.input.prop('disabled', true);\n                return true;\n            }\n            return false;\n        },\n        enable: function() {\n            if (this.hasInput()) {\n                this.input.prop('disabled', false);\n                return true;\n            }\n            return false;\n        },\n        isDisabled: function() {\n            if (this.hasInput()) {\n                return (this.input.prop('disabled') === true);\n            }\n            return false;\n        },\n        isInline: function() {\n            return (this.options.placement === 'inline') || (this.popover.hasClass('inline'));\n        }\n    };\n\n    $.iconpicker = Iconpicker;\n\n    // jQuery plugin\n    $.fn.iconpicker = function(options) {\n        return this.each(function() {\n            var $this = $(this);\n            if (!$this.data('iconpicker')) {\n                // create plugin instance (only if not exists) and expose the entire instance API\n                $this.data('iconpicker', new Iconpicker(this, ((typeof options === 'object') ? options : {})));\n            }\n        });\n    };\n\n\n    return skylark.attach(\"intg.FaIconPicker\",Iconpicker);\n});\n"]}